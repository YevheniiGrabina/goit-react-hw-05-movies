{"version":3,"file":"static/js/797.80a9fc4b.chunk.js","mappings":"6LAAO,IAAMA,EAAW,kCACXC,EAAU,oC,sMCCRC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,yGAAsCC,EAAtC,+BAA4C,GAA5C,SACyBC,MAAMD,GAD/B,YACQE,EADR,QAEkBC,GAFlB,iCAGYD,EAASE,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,cAJ/B,2GAOO,SAASC,IACd,OAAOT,EAAuB,2DAAD,OACgCD,EAAAA,IAIxD,SAASW,EAAUC,GACxB,OAAOX,EAAuB,qDAAD,OAC0BD,EAAAA,EAD1B,kBAC2CY,IAInE,SAASC,EAAgBC,GAC9B,OAAOb,EAAuB,sCAAD,OACWa,EADX,oBAC8Bd,EAAAA,IAItD,SAASe,EAAQD,GACtB,OAAOb,EAAuB,sCAAD,OACWa,EADX,4BACsCd,EAAAA,IAI9D,SAASgB,EAAWF,GACzB,OAAOb,EAAuB,sCAAD,OACWa,EADX,4BACsCd,EAAAA,EADtC,c,yGCjC/B,EAA6B,4B,SC6B7B,EAzBgB,WACd,IAAQc,GAAYG,EAAAA,EAAAA,MAAZH,QACR,GAA8BI,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRL,EAAAA,EAAAA,IAAWF,GAASQ,MAAK,SAAAC,GAAM,OAAIH,EAAWG,EAAOC,cACpD,CAACV,KAGF,8BACGK,EAAQM,OAAS,GAChB,wBACGN,EAAQO,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,2BACE,eAAGC,UAAWC,EAAd,qBAAqCH,MACrC,uBAAIC,MAFGF,SAOb","sources":["Api/const.jsx","services/fetchAPI.jsx","webpack://react-homework-template/./src/views/Reviews/Reviews.module.css?ff11","views/Reviews/Reviews.jsx"],"sourcesContent":["export const IMG_PATH = 'https://image.tmdb.org/t/p/w500';\nexport const API_KEY = '313ffdff82053e0e29100a2fb4b2d3e5';","import { API_KEY } from '../Api/const';\n\nasync function fetchWithErrorHandling(url = '') {\n  const response = await fetch(url);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not Found'));\n}\n\nexport function getTrandingMovie() {\n  return fetchWithErrorHandling(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\n  );\n}\n\nexport function findMovie(query) {\n  return fetchWithErrorHandling(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n}\n\nexport function getMovieDetails(movieId) {\n  return fetchWithErrorHandling(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}`\n  );\n}\n\nexport function getCast(movieId) {\n  return fetchWithErrorHandling(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n}\n\nexport function getReviews(movieId) {\n  return fetchWithErrorHandling(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}&page=1`\n  );\n}","// extracted by mini-css-extract-plugin\nexport default {\"authorName\":\"Reviews_authorName__GDP-o\"};","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getReviews } from '../../services/fetchAPI';\nimport s from './Reviews.module.css';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    getReviews(movieId).then(review => setReviews(review.results));\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews.length > 0 ? (\n        <ul>\n          {reviews.map(({ id, author, content }) => (\n            <li key={id}>\n              <p className={s.authorName}>Author: {author}</p>\n              <p>{content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>We don`t have any reviews for this movie</p>\n      )}\n    </>\n  );\n};\nexport default Reviews;"],"names":["IMG_PATH","API_KEY","fetchWithErrorHandling","url","fetch","response","ok","json","Promise","reject","Error","getTrandingMovie","findMovie","query","getMovieDetails","movieId","getCast","getReviews","useParams","useState","reviews","setReviews","useEffect","then","review","results","length","map","id","author","content","className","s"],"sourceRoot":""}