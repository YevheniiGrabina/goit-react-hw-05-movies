{"version":3,"file":"static/js/100.4a09ec71.chunk.js","mappings":"6LAAO,IAAMA,EAAW,kCACXC,EAAU,oC,sMCCRC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,yGAAsCC,EAAtC,+BAA4C,GAA5C,SACyBC,MAAMD,GAD/B,YACQE,EADR,QAEkBC,GAFlB,iCAGYD,EAASE,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,cAJ/B,2GAOO,SAASC,IACd,OAAOT,EAAuB,2DAAD,OACgCD,EAAAA,IAIxD,SAASW,EAAUC,GACxB,OAAOX,EAAuB,qDAAD,OAC0BD,EAAAA,EAD1B,kBAC2CY,IAInE,SAASC,EAAgBC,GAC9B,OAAOb,EAAuB,sCAAD,OACWa,EADX,oBAC8Bd,EAAAA,IAItD,SAASe,EAAQD,GACtB,OAAOb,EAAuB,sCAAD,OACWa,EADX,4BACsCd,EAAAA,IAI9D,SAASgB,EAAWF,GACzB,OAAOb,EAAuB,sCAAD,OACWa,EADX,4BACsCd,EAAAA,EADtC,c,oICjC/B,GAAgB,SAAW,+BAA+B,kBAAoB,wCAAwC,gBAAkB,sCAAsC,iBAAmB,uCAAuC,iBAAmB,wC,SCyD3P,EAnDqB,WAAO,IAAD,IACjBc,GAAYG,EAAAA,EAAAA,MAAZH,QACR,GAA0BI,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MACXC,EAAY,iBAAGF,QAAH,IAAGA,GAAH,UAAGA,EAAUG,aAAb,aAAG,EAAiBC,YAApB,QAA4B,KAE9CC,EAAAA,EAAAA,YAAU,YACRb,EAAAA,EAAAA,IAAgBC,GAASa,KAAKP,KAC7B,CAACN,IAEJ,IAAQc,EAAyCT,EAAzCS,MAAOC,EAAkCV,EAAlCU,YAAaC,EAAqBX,EAArBW,SAAUC,EAAWZ,EAAXY,OAEtC,OACE,iCACE,SAAC,KAAD,CAAMC,UAAWC,EAAAA,SAAYC,GAAIX,EAAjC,UACE,iBAAKS,UAAWC,EAAAA,kBAAhB,WACE,2BAAO,SAAC,MAAD,OACP,iBAAMD,UAAWC,EAAAA,gBAAjB,2BAIJ,iBAAKD,UAAWC,EAAAA,iBAAhB,WACE,gBAAKE,IAAG,UAAKpC,EAAAA,GAAL,OAAgB8B,GAAeO,IAAG,oBAAeR,MACzD,iBAAKI,UAAWC,EAAAA,iBAAhB,WACE,wBAAKL,KAEL,cAAGI,UAAWC,EAAAA,QAAd,uBACA,uBAAIH,KACJ,cAAGE,UAAWC,EAAAA,QAAd,oBACCF,GAAUA,EAAOM,KAAI,SAAAC,GAAK,OAAIA,EAAMC,QAAMC,KAAK,aAGpD,4BACE,cAAGR,UAAWC,EAAAA,QAAd,qCACA,wBACE,SAAC,KAAD,CAAMC,GAAE,OAAUV,MAAO,CAAEC,KAAMF,GAAjC,qBAIF,wBACE,SAAC,KAAD,CAAMW,GAAE,UAAaV,MAAO,CAAEC,KAAMF,GAApC,wBAIF,SAAC,EAAAkB,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD","sources":["Api/const.jsx","services/fetchAPI.jsx","webpack://react-homework-template/./src/views/MovieDetails/MovieDetails.module.css?d4e2","views/MovieDetails/MovieDetails.jsx"],"sourcesContent":["export const IMG_PATH = 'https://image.tmdb.org/t/p/w500';\nexport const API_KEY = '313ffdff82053e0e29100a2fb4b2d3e5';","import { API_KEY } from '../Api/const';\n\nasync function fetchWithErrorHandling(url = '') {\n  const response = await fetch(url);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not Found'));\n}\n\nexport function getTrandingMovie() {\n  return fetchWithErrorHandling(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\n  );\n}\n\nexport function findMovie(query) {\n  return fetchWithErrorHandling(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n}\n\nexport function getMovieDetails(movieId) {\n  return fetchWithErrorHandling(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}`\n  );\n}\n\nexport function getCast(movieId) {\n  return fetchWithErrorHandling(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n}\n\nexport function getReviews(movieId) {\n  return fetchWithErrorHandling(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}&page=1`\n  );\n}","// extracted by mini-css-extract-plugin\nexport default {\"backLink\":\"MovieDetails_backLink__cUreP\",\"backLinkContainer\":\"MovieDetails_backLinkContainer__h8hLq\",\"backLinkCapture\":\"MovieDetails_backLinkCapture__MolzE\",\"movieDetailsCard\":\"MovieDetails_movieDetailsCard__Eub0G\",\"movieDetailsInfo\":\"MovieDetails_movieDetailsInfo__zxjvT\"};","import { getMovieDetails } from '../../services/fetchAPI';\nimport { useState, useEffect, Suspense } from 'react';\nimport { useParams, Link, Outlet, useLocation } from 'react-router-dom';\nimport { AiOutlineArrowLeft } from 'react-icons/ai';\nimport { IMG_PATH } from '../../Api/const';\nimport s from './MovieDetails.module.css';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState({});\n  const location = useLocation();\n  const backLinkHref = location?.state?.from ?? '/';\n\n  useEffect(() => {\n    getMovieDetails(movieId).then(setMovie);\n  }, [movieId]);\n\n  const { title, poster_path, overview, genres } = movie;\n\n  return (\n    <>\n      <Link className={s.backLink} to={backLinkHref}>\n        <div className={s.backLinkContainer}>\n          <span>{<AiOutlineArrowLeft />}</span>\n          <span className={s.backLinkCapture}>Go Back</span>\n        </div>\n      </Link>\n\n      <div className={s.movieDetailsCard}>\n        <img src={`${IMG_PATH}${poster_path}`} alt={`Poster to ${title}`} />\n        <div className={s.movieDetailsInfo}>\n          <h1>{title}</h1>\n\n          <p className={s.capture}>Overview</p>\n          <p>{overview}</p>\n          <p className={s.capture}>Genres</p>\n          {genres && genres.map(genre => genre.name).join(', ')}\n        </div>\n      </div>\n      <div>\n        <p className={s.capture}>Additional information</p>\n        <p>\n          <Link to={`cast`} state={{ from: backLinkHref }}>\n            Cast\n          </Link>\n        </p>\n        <p>\n          <Link to={`reviews`} state={{ from: backLinkHref }}>\n            Reviews\n          </Link>\n        </p>\n        <Suspense fallback={<div>Loading...</div>}>\n          <Outlet />\n        </Suspense>\n      </div>\n    </>\n  );\n};\nexport default MovieDetails;"],"names":["IMG_PATH","API_KEY","fetchWithErrorHandling","url","fetch","response","ok","json","Promise","reject","Error","getTrandingMovie","findMovie","query","getMovieDetails","movieId","getCast","getReviews","useParams","useState","movie","setMovie","location","useLocation","backLinkHref","state","from","useEffect","then","title","poster_path","overview","genres","className","s","to","src","alt","map","genre","name","join","Suspense","fallback"],"sourceRoot":""}